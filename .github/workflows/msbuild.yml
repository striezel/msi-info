name: MSBuild on Windows

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: msi-info\msi-info.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Code checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Create ZIP file
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        for /f %%i IN ('git describe --always') do set "VERSION=%%i"
        echo Version is %VERSION%.
        md msi-info-%VERSION%
        copy msi-info\msi-info\bin\Release\net8.0\msi-info.exe msi-info-%VERSION%
        copy msi-info\msi-info\bin\Release\net8.0\msi-info.dll msi-info-%VERSION%
        copy msi-info\msi-info\bin\Release\net8.0\msi-info.runtimeconfig.json msi-info-%VERSION%
        copy LICENSE msi-info-%VERSION%
        copy readme.md msi-info-%VERSION%
        copy changelog.md msi-info-%VERSION%
        "C:\Program Files\7-Zip\7z.exe" a -r msi-info_%VERSION%.zip msi-info-%VERSION%

    - name: Upload ZIP file
      uses: actions/upload-artifact@v4
      with:
        name: msi-info-zipped
        if-no-files-found: error
        path: msi-info*.zip
